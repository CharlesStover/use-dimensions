name: use-dimensions

jobs:
  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable

  eslint:
    name: ESLint
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Lint
        run: yarn packages/use-dimensions run eslint

  # jest:
  #   name: Jest
  #   needs: install
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - name: Setup Node
  #       uses: actions/setup-node@v3
  #       with:
  #         cache: yarn
  #         check-latest: true
  #         node-version: 'lts/*'
  #     - name: Install dependencies
  #       run: yarn install --immutable
  #     - name: Unit test
  #       run: yarn packages/use-dimensions run jest
  #     - name: Upload coverage
  #       if: ${{ always() }}
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: use-dimensions--jest--coverage
  #         path: packages/use-dimensions/jest/coverage

  rollup:
    name: Rollup
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build
        run: yarn packages/use-dimensions run rollup
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: use-dimensions--dist
          path: packages/use-dimensions/dist

  github-packages:
    name: GitHub Packages
    if: ${{ github.event_name == 'push' }}
    needs: [eslint, rollup] # , jest
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@${{ github.repository_owner }}'
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: use-dimensions--dist
          path: packages/use-dimensions/dist
      - name: Publish
        working-directory: packages/use-dimensions
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          yarn config set npmAuthToken $NPM_AUTH_TOKEN;
          yarn config set npmScopes.${{ github.repository_owner }}.npmPublishRegistry 'https://npm.pkg.github.com';
          yarn npm publish --tolerate-republish;

  npm:
    name: NPM
    if: ${{ github.event_name == 'push' }}
    needs: [eslint, rollup] # , jest
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: use-dimensions--dist
          path: packages/use-dimensions/dist
      - name: Publish
        working-directory: packages/use-dimensions
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: >
          yarn config set npmAuthToken $NPM_AUTH_TOKEN;
          yarn npm publish --tolerate-republish;

on:
  pull_request:
    paths:
      - '.github/workflows/use-dimensions.yml'
      - 'packages/use-dimensions/**/*'
  push:
    branches: [main]
    paths:
      - '.github/workflows/use-dimensions.yml'
      - 'packages/use-dimensions/**/*'
